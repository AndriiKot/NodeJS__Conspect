// BAG
/ const fs = require("node:fs");
// const path = require("node:path");


// fs.readFileSync(path.join(__dirname, '/hello.txt'),
//   { encoding: 'utf8' },
//   (err, data) => {
//     if (err) return console.error('Ошибкак при чтении файла.');
//     console.log('Содержимое файла:');
//     console.log(data);
//   }
// );

// Fixed BAGv
// В вашем коде есть две ошибки:

// 1. **Неверный синтаксис для `fs.readFileSync`:**
//    - `fs.readFileSync` не принимает callback-функцию в качестве аргумента. Она должна быть вызвана с именем файла и опциональным объектом параметров.
// 2. **Неправильное использование `encoding`:**
//    - Вы передаете `encoding` как свойство объекта, но `fs.readFileSync` ожидает, что `encoding` будет передан как отдельный аргумент.

// Вот исправленный код:

const fs = require("node:fs");
const path = require("node:path");

const data = fs.readFileSync(path.join(__dirname, '/hello.txt'), 'utf8');

if (data) {
  console.log('Содержимое файла:');
  console.log(data);
} else {
  console.error('Ошибка при чтении файла.');
}


// **Объяснение:**

// * **`fs.readFileSync(path.join(__dirname, '/hello.txt'), 'utf8')`:**
//     - `fs.readFileSync` теперь правильно используется для чтения файла.
//     - `path.join(__dirname, '/hello.txt')` создает абсолютный путь к файлу `hello.txt` в текущем каталоге.
//     - `'utf8'` задает кодировку чтения файла.
// * **`if (data)`:**
//     - Мы проверяем, была ли успешно прочитана информация из файла. Если `data` не `null`, то файл был прочитан, и мы выводим его содержимое.
// * **`else { console.error('Ошибка при чтении файла.'); }`:**
//     - Если `data` равен `null`, то это значит, что была ошибка чтения файла, и мы выводим сообщение об ошибке.

// **Дополнительные замечания:**

// * **Синхронное чтение:**  `fs.readFileSync`  является синхронным методом, что означает, что выполнение кода приостанавливается до тех пор, пока файл не будет прочитан. Если вам нужно асинхронное чтение, используйте `fs.readFile`.
// * **Обработка ошибок:**  Хотя мы проверяем `data` на `null`,  иногда лучше использовать try/catch для более надежного управления ошибками.

