В Node.js существует две основные системы экспорта 
для модулей: `exports` и `module.exports`. 
Хотя они часто используются взаимозаменяемо, между ними есть важные отличия.

### Основные отличия:

1. **Ссылки**:
   - `exports` — это сокращение для `module.exports`. 
   Когда вы используете `exports`, вы по сути работаете 
   со ссылкой на объект, который изначально экспортируется через 
   `module.exports`. Если вы перезапишите `exports` (например, `exports = someValue`), 
   это не изменит `module.exports`, так как будет создана новая ссылка.
   
   ```javascript
   // Это работает, так как вы добавляете свойства к объекту
   exports.sum = sum;

   // Это не работает, так как вы создаете новую ссылку
   exports = {
       sum: sum
   };
   ```

2. **Экспорт цельного объекта**:
   - Когда вы хотите экспортировать один объект, 
   вы должны использовать `module.exports`. 
   Например, если вы хотите экспортировать класс, 
   функцию или объект, вы должны присвоить его `module.exports`.

   ```javascript
   // Правильный способ, если вы хотите экспортировать один объект
   module.exports = {
       sum: sum,
       sub: sub
   };
   ```

3. **Использование**:
   - В большинстве случаев `exports` 
   удобен для экспорта отдельных функций или свойств, 
   в то время как `module.exports` 
   часто используют для экспорта единственного объекта или функции.

### Пример:

```javascript
// module.js
const sum = (a, b) => a + b;
const sub = (a, b) => a - b;

exports.sub = sub; // работает, добавляет свойство к `exports`
exports.sum = sum; // также работает

// Если вы делаете это:
exports = { sum, sub }; // это не сработает, так как создается новая ссылка

// Однако так сработает:
module.exports = { sum, sub }; // это работает, 
так как вы присваиваете новое значение `module.exports`
```

### Итог:
- Используйте `exports` для добавления свойств к объекту, 
если вы не собираетесь перезаписывать его.
- Используйте `module.exports`, 
когда вам нужно экспортировать что-то другое 
(например, объект или класс) или вы хотите полностью перезаписать его.
/
